---
# Configure OS kernel as required before Oracle deployment. This covers most Oracle pre-installation configuration tasks.

# Install required packages, create oracle user and groups
- name: Install preinstall rpm for OL
  yum: name='{{ preinstall_rpm }}' state=present
  become: true
  tags:
    - preinstall_rpm

- name: Copy NetApp Linux host utility file to Oracle servers
  ansible.builtin.copy:
    src: "libhbaapi-2.2.9-13.el8.x86_64.rpm"
    dest: "/home/admin"
  tags:
    - netapp_utl

- name: Copy NetApp Linux host utility file to Oracle servers
  ansible.builtin.copy:
    src: "libhbalinux-1.0.17-7.el8.x86_64.rpm"
    dest: "/home/admin"
  tags:
    - netapp_utl

- name: Copy NetApp Linux host utility file to Oracle servers
  ansible.builtin.copy:
    src: "netapp_linux_unified_host_utilities-7-1.x86_64.rpm"
    dest: "/home/admin"
  tags:
    - netapp_utl

- name: Install NetApp Linux host utility
  yum: name='/home/admin/{{ netapp_utl[0] }}' state=present
  become: true
  tags:
    - netapp_utl

- name: Install NetApp Linux host utility
  yum: name='/home/admin/{{ netapp_utl[1] }}' state=present
  become: true
  tags:
    - netapp_utl

- name: Install NetApp Linux host utility
  yum: name='/home/admin/{{ netapp_utl[2] }}' state=present
  become: true
  tags:
    - netapp_utl

- name: Disable transparent hugepages in current system
  shell: |
    echo never > /sys/kernel/mm/transparent_hugepage/enabled
    echo never > /sys/kernel/mm/transparent_hugepage/defrag
  become: true
  tags:
    - disable_thp

- name: Disable transparent hugepages at reboot
  lineinfile:
    path: /etc/rc.local
    line: |
      # Disable transparent hugepages
      if test -f /sys/kernel/mm/transparent_hugepage/enabled; then
         echo never > /sys/kernel/mm/transparent_hugepage/enabled
      fi
      if test -f /sys/kernel/mm/transparent_hugepage/defrag; then
         echo never > /sys/kernel/mm/transparent_hugepage/defrag
      fi
  become: true
  tags:
    - disable_thp

- name: Configure kernel for hugepages
  sysctl: name=vm.nr_hugepages value='{{ hugepages_nr }}' state=present
  become: true
  tags:
    - config_hugepages

- name: Disable SELinux
  selinux: state=disabled
  become: true
  tags:
    - disable_selinux

- name: Disable firewall deamon (firewalld)
  service: name=firewalld state=stopped enabled=no
  become: true
  tags:
    - disable_firewall

- name: Enable chronyd service
  ansible.builtin.service:
    name: chronyd
    enabled: yes
  become: true
  tags:
    - enable_chronyd

- name: Restart chronyd service
  ansible.builtin.service:
    name: chronyd
    state: started
  become: true
  tags:
    - start_chronyd

- name: Increase file descriptor hard limit
  lineinfile:
    path: /etc/security/limits.conf
    line: "*               hard    nofile          65536"
  become: true

- name: Increase min stack size
  lineinfile:
    path: /etc/security/limits.conf
    line: "*               soft    stack           10240"
  become: true

- name: Create a pam.d session file
  file:
    path: /etc/pam.d/common-session
    state: touch
    mode: 0644
  become: true

- name: Add a line to enable limits change without reboot
  lineinfile:
    path: /etc/pam.d/common-session
    regexp: '^session required pam_limits.so'
    line: "session required pam_limits.so"
  become: true

- name: Create a pam.d session non-interactive file
  file:
    path: /etc/pam.d/common-session-noninteractive
    state: touch
    mode: 0644
  become: true

- name: Add a line to enable limits change without reboot
  lineinfile:
    path: /etc/pam.d/common-session-noninteractive
    regexp: '^session required pam_limits.so'
    line: "session required pam_limits.so"
  become: true

- name: Stop avahi-daemon
  service:
    name: avahi-daemon
    state: stopped
  become: true
  tags:
    - stop_avahi

- name: Disable avahi-daemon
  shell: "systemctl disable avahi-daemon"
  become: true
  tags:
    - disable_avahi

- name: Install OpenJDK 1.8
  yum: 
    name: '{{ java_version }}' 
    state: present
  become: true
  tags:
    - install_java-1.8
